---

services:
  ics-service:
    image: incora.azurecr.io/ics-service:latest
    container_name: ics-service-${SERVER_ID:-default}
    pull_policy: always
    ports:
      - "${ICS_APP_PORT:-9090}:9090"
      - "${ICS_MGMT_PORT:-9091}:9091"
    environment:
      # Database configuration
      - DB_URL=jdbc:oracle:thin:@//infdev-ora01a.tcmis.com:1521/ICSDEV
      - DB_PASSWORD=${TCMIS_DB_SECRET:-devpassword}
      - SPRING_DATASOURCE_URL=jdbc:oracle:thin:@//infdev-ora01a.tcmis.com:1521/ICSDEV
      - SPRING_DATASOURCE_USERNAME=${TCMIS_DB_USERNAME:-tcm_ops}
      - SPRING_DATASOURCE_PASSWORD=${TCMIS_DB_SECRET:-devpassword}
      - SPRING_DATASOURCE_DRIVER_CLASS_NAME=oracle.jdbc.OracleDriver
      # Azure AD configuration
      - SPRING_CLOUD_AZURE_ACTIVE_DIRECTORY_ENABLED=true
      - SPRING_CLOUD_AZURE_ACTIVE_DIRECTORY_CREDENTIAL_CLIENT_ID=a390d735-8347-4ef1-8a65-875d1410e88c
      - SPRING_CLOUD_AZURE_ACTIVE_DIRECTORY_APP_ID_URI=api://a390d735-8347-4ef1-8a65-875d1410e88c
      # Server configuration
      - SERVER_PORT=9090
      - SERVER_SERVLET_CONTEXT_PATH=/chemicals/api
      - MANAGEMENT_SERVER_PORT=9091
      - MANAGEMENT_ENDPOINTS_WEB_EXPOSURE_INCLUDE=*
      - MANAGEMENT_ENDPOINT_HEALTH_SHOW_DETAILS=always
      - MANAGEMENT_ENDPOINT_HEALTH_PROBES_ENABLED=true
      # Environment-specific settings
      - SPRING_PROFILES_ACTIVE=${ENVIRONMENT:-dev}
      - LOGGING_LEVEL_ROOT=${LOG_LEVEL:-INFO}
      - LOGGING_LEVEL_COM_INCORA=${LOG_LEVEL:-INFO}
      - SERVER_INSTANCE_ID=${SERVER_HOSTNAME}
      # OpenTelemetry configuration
      - OTEL_SERVICE_NAME=ics-service-${SERVER_ID:-default}
      - OTEL_TRACES_EXPORTER=otlp
      - OTEL_EXPORTER_OTLP_ENDPOINT=http://jaeger-${SERVER_ID:-default}:14268/api/traces
      - >-
        OTEL_RESOURCE_ATTRIBUTES=service.name=ics-service,
        service.version=latest,environment=${ENVIRONMENT:-dev},
        server=${SERVER_HOSTNAME}
      # Enhanced logging with trace correlation
      - >-
        LOGGING_PATTERN_CONSOLE=%d{yyyy-MM-dd HH:mm:ss} [%thread] %-5level
        [%X{traceId},%X{spanId}] %logger{36} - %msg%n
    volumes:
      - ics-service-msds:/msds
      - ics-service-receiptimages:/receiptimages
      - ics-service-docimages:/docimages
    healthcheck:
      test: ["CMD", "curl", "-f",
             "http://localhost:9091/actuator/health/liveness"]
      interval: 5s
      timeout: 1s
      retries: 3
      start_period: 45s
    restart: unless-stopped
    security_opt:
      - no-new-privileges:true
    cap_drop:
      - ALL
    networks:
      - ics-network

  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus-${SERVER_ID:-default}
    ports:
      - "${PROMETHEUS_PORT:-9092}:9090"
    volumes:
      - ./config/prometheus.yml:/etc/prometheus/prometheus.yml
      - ./config/alert-rules.yml:/etc/prometheus/alert-rules.yml
      - prometheus-data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--storage.tsdb.retention.time=200h'
      - '--web.enable-lifecycle'
      - '--web.enable-admin-api'
      - '--web.external-url=http://${SERVER_HOSTNAME}:${PROMETHEUS_PORT:-9092}'
    restart: unless-stopped
    networks:
      - ics-network

  loki:
    image: grafana/loki:latest
    container_name: loki-${SERVER_ID:-default}
    ports:
      - "${LOKI_PORT:-3100}:3100"
    volumes:
      - ./config/loki-config.yml:/etc/loki/local-config.yaml
      - loki-data:/loki
    command: -config.file=/etc/loki/local-config.yaml
    restart: unless-stopped
    networks:
      - ics-network

  promtail:
    image: grafana/promtail:latest
    container_name: promtail-${SERVER_ID:-default}
    volumes:
      - ./config/promtail-config.yml:/etc/promtail/config.yml
      - /var/log:/var/log:ro
      - /var/lib/docker/containers:/var/lib/docker/containers:ro
    command: -config.file=/etc/promtail/config.yml
    restart: unless-stopped
    networks:
      - ics-network

  grafana:
    image: grafana/grafana:latest
    container_name: grafana-${SERVER_ID:-default}
    ports:
      - "${GRAFANA_PORT:-3000}:3000"
    volumes:
      - grafana-data:/var/lib/grafana
      - ./config/grafana/provisioning:/etc/grafana/provisioning
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=${GRAFANA_ADMIN_PASSWORD:-admin123}
      - GF_USERS_ALLOW_SIGN_UP=false
      - GF_SERVER_ROOT_URL=http://${SERVER_HOSTNAME}:${GRAFANA_PORT:-3000}
      - GF_INSTALL_PLUGINS=grafana-piechart-panel
    restart: unless-stopped
    networks:
      - ics-network

  alertmanager:
    image: prom/alertmanager:latest
    container_name: alertmanager-${SERVER_ID:-default}
    ports:
      - "${ALERTMANAGER_PORT:-9093}:9093"
    volumes:
      - ./config/alertmanager.yml:/etc/alertmanager/alertmanager.yml
      - alertmanager-data:/alertmanager
    command:
      - '--config.file=/etc/alertmanager/alertmanager.yml'
      - '--storage.path=/alertmanager'
      - '--web.external-url=http://${SERVER_HOSTNAME}:${ALERTMANAGER_PORT:-9093}'
    restart: unless-stopped
    networks:
      - ics-network

  jaeger:
    image: jaegertracing/all-in-one:latest
    container_name: jaeger-${SERVER_ID:-default}
    ports:
      - "${JAEGER_UI_PORT:-16686}:16686"
      - "${JAEGER_HTTP_PORT:-14268}:14268"
      - "${JAEGER_GRPC_PORT:-14250}:14250"
      - "${JAEGER_UDP_PORT:-6831}:6831/udp"
    environment:
      - COLLECTOR_OTLP_ENABLED=true
      - SPAN_STORAGE_TYPE=memory
    restart: unless-stopped
    networks:
      - ics-network

volumes:
  ics-service-msds:
    driver: local
    name: ics-service-msds-${SERVER_ID:-default}
  ics-service-receiptimages:
    driver: local
    name: ics-service-receiptimages-${SERVER_ID:-default}
  ics-service-docimages:
    driver: local
    name: ics-service-docimages-${SERVER_ID:-default}
  prometheus-data:
    driver: local
    name: prometheus-data-${SERVER_ID:-default}
  loki-data:
    driver: local
    name: loki-data-${SERVER_ID:-default}
  grafana-data:
    driver: local
    name: grafana-data-${SERVER_ID:-default}
  alertmanager-data:
    driver: local
    name: alertmanager-data-${SERVER_ID:-default}

networks:
  ics-network:
    driver: bridge
    name: ics-network-${SERVER_ID:-default}
