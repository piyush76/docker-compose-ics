---
services:
  ics-service:
    image: incora.azurecr.io/ics-service:stable
    container_name: ics-service-prod
    # Azure Container Registry authentication
    pull_policy: always
    ports:
      - "9090:9090"  # Application port
      - "9091:9091"  # Management/Actuator port
    environment:
      # Database configuration - External Oracle Database
      - DB_URL=jdbc:oracle:thin:@//infdev-ora01a.tcmis.com:1521/ICSDEV
      - DB_PASSWORD=${TCMIS_DB_SECRET}
      # Spring configuration
      - SPRING_PROFILES_ACTIVE=prod
      - SPRING_DATASOURCE_URL=jdbc:oracle:thin:@//infdev-ora01a.tcmis.com:1521/ICSDEV
      - SPRING_DATASOURCE_USERNAME=tcm_ops
      - SPRING_DATASOURCE_PASSWORD=${TCMIS_DB_SECRET}
      - SPRING_DATASOURCE_DRIVER_CLASS_NAME=oracle.jdbc.OracleDriver
      # Azure AD configuration
      - SPRING_CLOUD_AZURE_ACTIVE_DIRECTORY_ENABLED=true
      - SPRING_CLOUD_AZURE_ACTIVE_DIRECTORY_CREDENTIAL_CLIENT_ID=a390d735-8347-4ef1-8a65-875d1410e88c
      - SPRING_CLOUD_AZURE_ACTIVE_DIRECTORY_APP_ID_URI=api://a390d735-8347-4ef1-8a65-875d1410e88c
      # Server configuration
      - SERVER_PORT=9090
      - SERVER_SERVLET_CONTEXT_PATH=/chemicals/api
      - MANAGEMENT_SERVER_PORT=9091
      - MANAGEMENT_ENDPOINTS_WEB_EXPOSURE_INCLUDE=health,info,metrics
      - MANAGEMENT_ENDPOINT_HEALTH_SHOW_DETAILS=when-authorized
      - MANAGEMENT_ENDPOINT_HEALTH_PROBES_ENABLED=true
      # Production specific settings
      - LOGGING_LEVEL_ROOT=WARN
      - LOGGING_LEVEL_COM_INCORA=INFO
      # OpenTelemetry configuration
      - OTEL_SERVICE_NAME=ics-service
      - OTEL_TRACES_EXPORTER=otlp
      - OTEL_EXPORTER_OTLP_ENDPOINT=http://jaeger-prod:14268/api/traces
      - OTEL_RESOURCE_ATTRIBUTES=service.name=ics-service,service.version=stable,environment=prod
      # Enhanced logging with trace correlation
      - >-
        LOGGING_PATTERN_CONSOLE=%d{yyyy-MM-dd HH:mm:ss} [%thread] %-5level
        [%X{traceId},%X{spanId}] %logger{36} - %msg%n
      # Performance tuning
      - JAVA_OPTS=-Xms2g -Xmx4g -XX:+UseG1GC
    volumes:
      # Volume mounts for production
      - ics-service-msds-prod:/msds
      - ics-service-receiptimages-prod:/receiptimages
      - ics-service-docimages-prod:/docimages
    healthcheck:
      test: ["CMD", "curl", "-f",
             "http://localhost:9091/actuator/health/liveness"]
      interval: 10s
      timeout: 5s
      retries: 3
      start_period: 60s
    # No local database dependency - using external Oracle database
    restart: always
    security_opt:
      - no-new-privileges:true
    cap_drop:
      - ALL
    deploy:
      resources:
        limits:
          memory: 4G
          cpus: '2.0'
        reservations:
          memory: 2G
          cpus: '1.0'
    networks:
      - ics-network-prod

  # Monitoring Stack
  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus-prod
    ports:
      - "9092:9090"  # Prometheus web UI
    volumes:
      - ./monitoring/prometheus.yml:/etc/prometheus/prometheus.yml
      - ./monitoring/alert-rules.yml:/etc/prometheus/alert-rules.yml
      - prometheus-data-prod:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--storage.tsdb.retention.time=720h'
      - '--web.enable-lifecycle'
      - '--web.enable-admin-api'
    restart: always
    security_opt:
      - no-new-privileges:true
    cap_drop:
      - ALL
    deploy:
      resources:
        limits:
          memory: 1G
          cpus: '0.5'
        reservations:
          memory: 512M
          cpus: '0.25'
    networks:
      - ics-network-prod

  loki:
    image: grafana/loki:latest
    container_name: loki-prod
    ports:
      - "3100:3100"
    volumes:
      - ./monitoring/loki-config.yml:/etc/loki/local-config.yaml
      - loki-data-prod:/loki
    command: -config.file=/etc/loki/local-config.yaml
    restart: always
    security_opt:
      - no-new-privileges:true
    cap_drop:
      - ALL
    deploy:
      resources:
        limits:
          memory: 512M
          cpus: '0.25'
        reservations:
          memory: 256M
          cpus: '0.1'
    networks:
      - ics-network-prod

  promtail:
    image: grafana/promtail:latest
    container_name: promtail-prod
    volumes:
      - ./monitoring/promtail-config.yml:/etc/promtail/config.yml
      - /var/log:/var/log:ro
      - /var/lib/docker/containers:/var/lib/docker/containers:ro
    command: -config.file=/etc/promtail/config.yml
    restart: always
    security_opt:
      - no-new-privileges:true
    cap_drop:
      - ALL
    networks:
      - ics-network-prod

  grafana:
    image: grafana/grafana:latest
    container_name: grafana-prod
    ports:
      - "3000:3000"
    volumes:
      - grafana-data-prod:/var/lib/grafana
      - ./monitoring/grafana/provisioning:/etc/grafana/provisioning
    environment:
      - GF_SECURITY_ADMIN_USER=${GRAFANA_ADMIN_USER:-admin}
      - GF_SECURITY_ADMIN_PASSWORD=${GRAFANA_ADMIN_PASSWORD}
      - GF_USERS_ALLOW_SIGN_UP=false
      - GF_INSTALL_PLUGINS=grafana-piechart-panel
    restart: always
    security_opt:
      - no-new-privileges:true
    cap_drop:
      - ALL
    deploy:
      resources:
        limits:
          memory: 512M
          cpus: '0.25'
        reservations:
          memory: 256M
          cpus: '0.1'
    networks:
      - ics-network-prod

  alertmanager:
    image: prom/alertmanager:latest
    container_name: alertmanager-prod
    ports:
      - "9093:9093"
    volumes:
      - ./monitoring/alertmanager.yml:/etc/alertmanager/alertmanager.yml
      - alertmanager-data-prod:/alertmanager
    command:
      - '--config.file=/etc/alertmanager/alertmanager.yml'
      - '--storage.path=/alertmanager'
      - '--web.external-url=http://localhost:9093'
    restart: always
    security_opt:
      - no-new-privileges:true
    cap_drop:
      - ALL
    deploy:
      resources:
        limits:
          memory: 256M
          cpus: '0.5'
        reservations:
          memory: 128M
          cpus: '0.25'
    networks:
      - ics-network-prod

  jaeger:
    image: jaegertracing/all-in-one:latest
    container_name: jaeger-prod
    ports:
      - "16686:16686"  # Jaeger UI
      - "14268:14268"  # HTTP collector
      - "14250:14250"  # gRPC collector
      - "6831:6831/udp"  # UDP agent
    environment:
      - COLLECTOR_OTLP_ENABLED=true
      - SPAN_STORAGE_TYPE=memory
    restart: always
    security_opt:
      - no-new-privileges:true
    cap_drop:
      - ALL
    deploy:
      resources:
        limits:
          memory: 512M
          cpus: '1.0'
        reservations:
          memory: 256M
          cpus: '0.5'
    networks:
      - ics-network-prod

volumes:
  # Named volumes for persistent data storage - Production
  ics-service-msds-prod:
    driver: local
  ics-service-receiptimages-prod:
    driver: local
  ics-service-docimages-prod:
    driver: local
  # Monitoring volumes - Production
  prometheus-data-prod:
    driver: local
  loki-data-prod:
    driver: local
  grafana-data-prod:
    driver: local
  alertmanager-data-prod:
    driver: local

networks:
  ics-network-prod:
    driver: bridge
    name: ics-network-prod
